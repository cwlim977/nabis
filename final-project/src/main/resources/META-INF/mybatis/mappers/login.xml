<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.login.dao.loginDAO">
	
<!-- 	<resultMap type="EmpVO" id="empMap" autoMapping="true">
		<id property="empNo" column="EMP_NO"/>
		<collection property="idRoles" ofType="string">
			<result column="ID_ROLE"/>
		</collection>
	</resultMap>
	<select id="findIdByEmpNo" parameterType="string" resultMap="empMap">
		SELECT
		    A.EMP_NO
		    ,EMP_NM
		    ,ENT_DATE
		    ,OUT_DATE
		    ,ENT_CASE
		    ,ENG_NM
		    ,EMP_MM
		    ,EMP_GEN
		    ,REGNO1
		    ,REGNO2
		    ,CP_NO
		    ,OFC_NO
		    ,EMP_ADDR
		    ,BS_WKTIME
		    ,EMP_CCST
		    ,EMP_MAIL
		    ,EMP_PASS
		    ,EMP_CST
		    ,ID_ROLE
		FROM EMP A LEFT OUTER JOIN ID B 
		on (A.EMP_NO = B.EMP_NO)
		WHERE A.EMP_NO = #{username} 
	</select> -->
	
 	<resultMap type="EmpVO" id="EmpMap" autoMapping="true">
		<id property="empNo" column="EMP_NO"/>
		
		<collection property="jobList" ofType="OwnJobVO" notNullColumn="OJ_NO" autoMapping="true">
			<id property="ojNo" column="OJ_NO"/>
			
		</collection>
		<collection property="deptList" ofType="BlgDeptVO" notNullColumn="BD_NO" autoMapping="true">
			<id property="bdNo" column="BD_NO"/>
		</collection>
		
		<collection property="idRoles" ofType="string">
			<result column="ID_ROLE"/>
		</collection>
		
	</resultMap>
		<select id="findIdByEmpNo" parameterType="string" resultMap="EmpMap">
	    WITH MAX_ASGMT AS(
	          SELECT MAX(ASGMT_NO) AS ASGMT_NO, ASGMT_PERS AS EMP_NO
	          FROM ASGMT 
	          WHERE ASGMT_PERS IN (SELECT EMP_NO FROM EMP)
	           <![CDATA[
	          AND ASGMT_DATE <= SYSDATE
	          ]]>
	    	  AND ASGMT_CCST IS NULL
	          GROUP BY ASGMT_PERS
	          
	    ), ASGMT_VIEW AS(
	    SELECT * 
	    FROM ASGMT A INNER JOIN MAX_ASGMT C ON (A.ASGMT_NO = C.ASGMT_NO 
	                                            AND A.ASGMT_PERS = C.EMP_NO)
	                LEFT OUTER JOIN BLG_DEPT B  ON (C.EMP_NO = B.ASGMT_PERS 
	                                                AND C.ASGMT_NO = B.ASGMT_NO)
	                LEFT OUTER JOIN OWN_JOB O   ON (C.EMP_NO = O.ASGMT_PERS 
	                                                AND C.ASGMT_NO = O.ASGMT_NO)
	    )
		SELECT 
		        E.EMP_NM
		        , J.JNM
		        , E.EMP_NO
		        , TO_CHAR(ENT_DATE, 'YYYY-MM-DD') "ENT_DATE"
		        , TO_CHAR(OUT_DATE, 'YYYY-MM-DD') "OUT_DATE"
		        ,CASE 
		            WHEN TRUNC(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 0) ||'년'
		                 || TRUNC(MOD(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 1)*12, 0 ) || ' 개월' = '0년0 개월'
		            THEN ''
		            WHEN TRUNC(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 0) ||'년' = '0년'
		            THEN TRUNC(MOD(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 1)*12, 0 ) || ' 개월'
		            ELSE TRUNC(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 0) ||'년'
		                || TRUNC(MOD(MONTHS_BETWEEN( SYSDATE, ENT_DATE)/12, 1)*12, 0 ) || ' 개월' 
		        END AS "TNEURE_PERIOD"
		        , E.ENT_CASE
		        ,	CASE 
	                    WHEN (SELECT COUNT(*)
	                             FROM EMPT
	                             WHERE EMP_NO = E.EMP_NO
	                             AND DEL_YN IS NULL
	                             AND SYSDATE > OT_DATE) > 0 THEN '퇴직'
			            WHEN (SELECT COUNT(*)
	                             FROM EMPT
	                             WHERE EMP_NO = E.EMP_NO
	                             AND DEL_YN IS NULL
	                             AND SYSDATE BETWEEN BK_SDATE AND BK_EDATE) > 0 THEN '휴직'
	                    ELSE '재직중'
	                    END AS "EMP_ST"
		        ,  (
		                SELECT DEPTFLOW FROM HOR_DEPTFLOW H
		                WHERE DE.DCODE = H.DCODE
		           ) AS "DEPT_FLOW"
		        , DE.DNM		, DU.DTNM		, E.ENG_NM
		        , E.EMP_MM		, E.REGNO1		, E.REGNO2
		        , E.OFC_NO		, E.EMP_ADDR	, E.BS_WKTIME
		        , A.PTN_CODE	, A.GRD_CODE	, E.EMP_CCST
		        , P.PTN_NM		, G.GRD_NM		, E.EMP_GEN 
		        , E.CP_NO		, E.EMP_MAIL 	, A.OJ_NO
		        , A.BD_NO		, I.EMP_PASS	, I.EMP_CST
		        , I.ID_ROLE		, A.MAINCK		, E.BANK
		        , E.ACCT_NO		, E.OWNER		, A.JCODE
		        , A.DCODE		, A.DTCODE		, DE.DHNO
		        , E.EMP_IMG
		FROM EMP E LEFT OUTER JOIN ASGMT_VIEW A ON ( E.EMP_NO = A.EMP_NO)
					LEFT OUTER JOIN GRD G ON ( A.GRD_CODE = G.GRD_CODE)
					LEFT OUTER JOIN PSTN P ON ( A.PTN_CODE = P.PTN_CODE)
					LEFT OUTER JOIN DEPT DE ON ( A.DCODE = DE.DCODE)
					LEFT OUTER JOIN DUTY DU ON ( A.DTCODE = DU.DTCODE)
					LEFT OUTER JOIN JOB J ON (A.JCODE = J.JCODE)
					LEFT OUTER JOIN ID I ON (E.EMP_NO = I.EMP_NO)
		WHERE E.EMP_NO = #{empNo} 
		ORDER BY EMP_NO, MAINCK DESC
	</select>
	
	<!-- login비밀번호 찾기 -->
	<update id="updateEmpPass" parameterType="EmpVO">
		UPDATE ID 
		SET EMP_PASS = #{empPass, jdbcType=VARCHAR}
		WHERE EMP_NO = #{empNo, jdbcType=VARCHAR}
	</update>
	<!-- login비밀번호 찾기 end -->
</mapper>